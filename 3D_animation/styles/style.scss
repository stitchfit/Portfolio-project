:root {
              --boxColor: rgba(138, 138, 30, 0.239);
              --rotateSpeed: 30s;
              --bounceSpeed: 1.5s;
}

body {
              background-color: rgb(0, 0, 0);
              min-height: 100vh;
              overflow: hidden;
              display: flex;
              justify-content: center;
              align-items: center;
              font-size: 75px;
              perspective: 10em;
              perspective-origin: 50% calc(50% - 2em);

}

.scene {
              position: relative;
              transform-style: preserve-3d;
              animation: 
              sceneRotate var(--rotateSpeed) infinite linear;

              @keyframes sceneRotate {
                            to { transform: rotateY(360deg)}

              }
}
/* rotating box that helped me check if CSS was working correctly
.box {
              width: 200px;
              height: 200px;
              background: green;
              animation: rotate 10s infinite linear;
              transform: perspective(800px);

              @keyframes rotate {
                            to {
                                          transform: perspective(800px) rotateY(360deg);
                            }
              }
}
*/
.ball {
              width: 1em;
              height: 1em;
              border-radius: 50%;

              position: absolute;
              left: -.5em;
              bottom: 1em;
              background: lightseagreen;
              background-image: radial-gradient(circle at top, lightseagreen, 50%, #000);

              animation:
              ballBounce var(--bounceSpeed) infinite ease-out,
              sceneRotate var(--rotateSpeed) infinite linear reverse;

              @keyframes ballBounce { 
                            0%, 100% { bottom: 0.5em;}
                            50% { bottom: 3em; animation-timing-function: ease-in;}
              
                            }
}

.ballshadow {
              position: absolute;
              width: 100%;
              height: 100%;
              background-image: radial-gradient(#0007, #0000 50%);

              animation:
              ballShadow var(--bounceSpeed) infinite ease-out;

              @keyframes ballShadow {

                            0%, 10%, 95%, 100% { transform: scale(1); opacity: 1;}
                            50% {transform: scale(2); opacity:0.5; animation-timing-function: ease-in;}

              }
}

.cube {
              width: 2em;
              height: 2em;
              
              position: absolute;
              bottom: -1em;
              left: -1em;
              /*-webkit-transform-style: preserve-3d; not needed on parent element */

              /* the preserve-3d element is all you need if your 3d object is still looking flat
              no need to add perspective if the scene already has a set perspective*/
              transform-style: preserve-3d;
              /* adding walls to the cube is still not working
              but the color does stay now
              Have to press "Watch Sass" before saving for the SCSS to update the CSS file */

              animation: cubeHeight var(--bounceSpeed) infinite linear;

              @keyframes cubeHeight {

                            0%, 100% {height: 1.5em; }

                            10%, 95% { height: 2em  }

              }

              .left, .right, .front, .back {
                            position: absolute;
                            width: 100%;
                            height: 100%;
                            background: var(--boxColor);
                            box-shadow: 0 0 0.5em #000a inset;
              }
           
              .front { transform: translateZ(1em);}
              .right { transform: rotateY(90deg) translateZ(1em);}
              .back  { transform: rotateY(180deg) translateZ(1em);}
              .left { transform: rotateY(270deg) translateZ(1em);}
                   
              .top {
                            position: absolute;
                            width: 2em;
                            height: 2em;
                            background: var(--boxColor);
                            transform: translateY( -50%) rotateX(90deg);
                            box-shadow: 0 0 0.5em #000a inset;
              }
              .bottom{
                            position: absolute;
                            width: 2em;
                            height: 2em;
                            background: rgba(18, 18, 18, 0.467);
                            bottom: 0;
                            transform: translateY(50%) rotateX(90deg);
                            box-shadow: 0 0 0.5em #000;
              }




}




.floor {
              position: absolute;
              top: 1em;
              transform: translate(-50%, -50%) rotateX(90deg);
              width: 15em;
              height: 15em;
              background-image:
              /*radial gradient adds a sense of lighting to the scene*/
              radial-gradient(#0000, #000 75%),
              /* the reapeating conic gradient gives us the checker board look */
              repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);
              background-size: 100%, 1em 1em;
}